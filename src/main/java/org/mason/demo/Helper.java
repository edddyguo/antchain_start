package org.mason.demo;

import com.alipay.mychain.sdk.api.utils.Utils;
import com.alipay.mychain.sdk.domain.transaction.TransactionReceipt;
import com.alipay.mychain.sdk.errorcode.ErrorCode;
import com.alipay.mychain.sdk.message.transaction.account.TransferBalanceRequest;
import com.alipay.mychain.sdk.message.transaction.account.TransferBalanceResponse;

import java.math.BigInteger;

import org.apache.log4j.Logger;
public class Helper {
    private static final Logger logger = Logger.getLogger(Helper.class);
    //define test function
    public void test(){
        //打印
        /**
         * static修饰的方法或者变量是属于类的，所有类的对象共享的。当在类加载的过程中，static修饰的方法或变量已经被加载到方法区中了，如果此时你去调用对象的话，会报错。
         *         Helper a=new Helper();
         *         a.test();
        */

        System.out.println("Hello World++++++++++++++++++");
    }

    //0xc3311b11fbccbad9fd0ee70bc9d7cf48d9899d3ae322e18f1e7172564ce4b995
    //0x608060405234801561001057600080fd5b506104fb806100206000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635a9b0b891461005c5780637cbb49f0146100f35780638262963b14610183575b600080fd5b34801561006857600080fd5b506100716101f6565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156100b757808201518184015260208101905061009c565b50505050905090810190601f1680156100e45780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156100ff57600080fd5b506101086102a2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014857808201518184015260208101905061012d565b50505050905090810190601f1680156101755780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018f57600080fd5b506101f4600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050610344565b005b6060600080600154818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102935780601f1061026857610100808354040283529160200191610293565b820191906000526020600020905b81548152906001019060200180831161027657829003601f168201915b50505050509150915091509091565b606060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561033a5780601f1061030f5761010080835404028352916020019161033a565b820191906000526020600020905b81548152906001019060200180831161031d57829003601f168201915b5050505050905090565b816000908051906020019061035a92919061042a565b50806001819055507f010becc10ca1475887c4ec429def1ccc2e9ea1713fe8b0d4e9a1d009042f6b8e600060015460405180806020018381526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156104175780601f106103ec57610100808354040283529160200191610417565b820191906000526020600020905b8154815290600101906020018083116103fa57829003601f168201915b5050935050505060405180910390a15050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061046b57805160ff1916838001178555610499565b82800160010185558215610499579182015b8281111561049857825182559160200191906001019061047d565b5b5090506104a691906104aa565b5090565b6104cc91905b808211156104c85760008160009055506001016104b0565b5090565b905600a165627a7a72305820752675922a0e92e73687982fc634997440c30fadb91d2b9edca0b748285803e10029

}
